// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Protocol int32

const (
	Protocol_Unknown Protocol = 0
	Protocol_Grpc    Protocol = 1
	Protocol_Http    Protocol = 2
)

var Protocol_name = map[int32]string{
	0: "Unknown",
	1: "Grpc",
	2: "Http",
}

var Protocol_value = map[string]int32{
	"Unknown": 0,
	"Grpc":    1,
	"Http":    2,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}

func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

type Type int32

const (
	Type_UnknownType  Type = 0
	Type_CA           Type = 1
	Type_Auth         Type = 2
	Type_Organization Type = 3
	Type_TokenStore   Type = 4
	Type_Data         Type = 5
	Type_FileStorage  Type = 6
	Type_AppStore     Type = 7
	Type_Accounts     Type = 8
	Type_Files        Type = 9
)

var Type_name = map[int32]string{
	0: "UnknownType",
	1: "CA",
	2: "Auth",
	3: "Organization",
	4: "TokenStore",
	5: "Data",
	6: "FileStorage",
	7: "AppStore",
	8: "Accounts",
	9: "Files",
}

var Type_value = map[string]int32{
	"UnknownType":  0,
	"CA":           1,
	"Auth":         2,
	"Organization": 3,
	"TokenStore":   4,
	"Data":         5,
	"FileStorage":  6,
	"AppStore":     7,
	"Accounts":     8,
	"Files":        9,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

type Security int32

const (
	Security_None      Security = 0
	Security_TLS       Security = 1
	Security_MutualTLS Security = 2
)

var Security_name = map[int32]string{
	0: "None",
	1: "TLS",
	2: "MutualTLS",
}

var Security_value = map[string]int32{
	"None":      0,
	"TLS":       1,
	"MutualTLS": 2,
}

func (x Security) String() string {
	return proto.EnumName(Security_name, int32(x))
}

func (Security) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

type Status int32

const (
	Status_UnknownStatus Status = 0
	Status_Running       Status = 1
	Status_Stopped       Status = 2
)

var Status_name = map[int32]string{
	0: "UnknownStatus",
	1: "Running",
	2: "Stopped",
}

var Status_value = map[string]int32{
	"UnknownStatus": 0,
	"Running":       1,
	"Stopped":       2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

type EventType int32

const (
	EventType_UnknownEvent     EventType = 0
	EventType_Registered       EventType = 1
	EventType_DeRegistered     EventType = 2
	EventType_DeRegisteredNode EventType = 3
	EventType_Updated          EventType = 4
)

var EventType_name = map[int32]string{
	0: "UnknownEvent",
	1: "Registered",
	2: "DeRegistered",
	3: "DeRegisteredNode",
	4: "Updated",
}

var EventType_value = map[string]int32{
	"UnknownEvent":     0,
	"Registered":       1,
	"DeRegistered":     2,
	"DeRegisteredNode": 3,
	"Updated":          4,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

type ActionOnRegisterExistingService int32

const (
	ActionOnRegisterExistingService_Replace        ActionOnRegisterExistingService = 0
	ActionOnRegisterExistingService_UpdateExisting ActionOnRegisterExistingService = 1
	ActionOnRegisterExistingService_AddNodes       ActionOnRegisterExistingService = 2
	ActionOnRegisterExistingService_RemoveOld      ActionOnRegisterExistingService = 4
)

var ActionOnRegisterExistingService_name = map[int32]string{
	0: "Replace",
	1: "UpdateExisting",
	2: "AddNodes",
	4: "RemoveOld",
}

var ActionOnRegisterExistingService_value = map[string]int32{
	"Replace":        0,
	"UpdateExisting": 1,
	"AddNodes":       2,
	"RemoveOld":      4,
}

func (x ActionOnRegisterExistingService) String() string {
	return proto.EnumName(ActionOnRegisterExistingService_name, int32(x))
}

func (ActionOnRegisterExistingService) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

type State struct {
	Status               Status            `protobuf:"varint,1,opt,name=status,proto3,enum=pb.Status" json:"status,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UnknownStatus
}

func (m *State) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type ConnectionInfo struct {
	Protocol             Protocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=pb.Protocol" json:"protocol,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Certificate          []byte   `protobuf:"bytes,3,opt,name=Certificate,proto3" json:"Certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectionInfo) Reset()         { *m = ConnectionInfo{} }
func (m *ConnectionInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectionInfo) ProtoMessage()    {}
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *ConnectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionInfo.Unmarshal(m, b)
}
func (m *ConnectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionInfo.Marshal(b, m, deterministic)
}
func (m *ConnectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionInfo.Merge(m, src)
}
func (m *ConnectionInfo) XXX_Size() int {
	return xxx_messageInfo_ConnectionInfo.Size(m)
}
func (m *ConnectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionInfo proto.InternalMessageInfo

func (m *ConnectionInfo) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_Unknown
}

func (m *ConnectionInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ConnectionInfo) GetCertificate() []byte {
	if m != nil {
		return m.Certificate
	}
	return nil
}

type Node struct {
	Name                 string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Protocol             Protocol          `protobuf:"varint,2,opt,name=protocol,proto3,enum=pb.Protocol" json:"protocol,omitempty"`
	Address              string            `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Security             Security          `protobuf:"varint,4,opt,name=security,proto3,enum=pb.Security" json:"security,omitempty"`
	Ttl                  int64             `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Meta                 map[string]string `protobuf:"bytes,6,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_Unknown
}

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Node) GetSecurity() Security {
	if m != nil {
		return m.Security
	}
	return Security_None
}

func (m *Node) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Node) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

type Info struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type                 Type              `protobuf:"varint,3,opt,name=type,proto3,enum=pb.Type" json:"type,omitempty"`
	Label                string            `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Nodes                []*Node           `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Meta                 map[string]string `protobuf:"bytes,7,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Info) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Info) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_UnknownType
}

func (m *Info) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Info) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Info) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

type Event struct {
	Type                 EventType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.EventType" json:"type,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Info                 *Info     `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_UnknownEvent
}

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type RegisterRequest struct {
	Service              *Info                           `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Action               ActionOnRegisterExistingService `protobuf:"varint,2,opt,name=action,proto3,enum=pb.ActionOnRegisterExistingService" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetService() *Info {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *RegisterRequest) GetAction() ActionOnRegisterExistingService {
	if m != nil {
		return m.Action
	}
	return ActionOnRegisterExistingService_Replace
}

type RegisterResponse struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

type DeregisterRequest struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeregisterRequest) Reset()         { *m = DeregisterRequest{} }
func (m *DeregisterRequest) String() string { return proto.CompactTextString(m) }
func (*DeregisterRequest) ProtoMessage()    {}
func (*DeregisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *DeregisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeregisterRequest.Unmarshal(m, b)
}
func (m *DeregisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeregisterRequest.Marshal(b, m, deterministic)
}
func (m *DeregisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeregisterRequest.Merge(m, src)
}
func (m *DeregisterRequest) XXX_Size() int {
	return xxx_messageInfo_DeregisterRequest.Size(m)
}
func (m *DeregisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeregisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeregisterRequest proto.InternalMessageInfo

func (m *DeregisterRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *DeregisterRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type DeregisterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeregisterResponse) Reset()         { *m = DeregisterResponse{} }
func (m *DeregisterResponse) String() string { return proto.CompactTextString(m) }
func (*DeregisterResponse) ProtoMessage()    {}
func (*DeregisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *DeregisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeregisterResponse.Unmarshal(m, b)
}
func (m *DeregisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeregisterResponse.Marshal(b, m, deterministic)
}
func (m *DeregisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeregisterResponse.Merge(m, src)
}
func (m *DeregisterResponse) XXX_Size() int {
	return xxx_messageInfo_DeregisterResponse.Size(m)
}
func (m *DeregisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeregisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeregisterResponse proto.InternalMessageInfo

type ListRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type ListResponse struct {
	Applications         []*Info  `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{10}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetApplications() []*Info {
	if m != nil {
		return m.Applications
	}
	return nil
}

type GetRequest struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{11}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

type GetResponse struct {
	Info                 *Info    `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{12}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type SearchRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type                 Type     `protobuf:"varint,2,opt,name=type,proto3,enum=pb.Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{13}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SearchRequest) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_UnknownType
}

type SearchResponse struct {
	Services             []*Info  `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{14}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetServices() []*Info {
	if m != nil {
		return m.Services
	}
	return nil
}

type ListenRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenRequest) Reset()         { *m = ListenRequest{} }
func (m *ListenRequest) String() string { return proto.CompactTextString(m) }
func (*ListenRequest) ProtoMessage()    {}
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{15}
}

func (m *ListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest.Unmarshal(m, b)
}
func (m *ListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest.Marshal(b, m, deterministic)
}
func (m *ListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest.Merge(m, src)
}
func (m *ListenRequest) XXX_Size() int {
	return xxx_messageInfo_ListenRequest.Size(m)
}
func (m *ListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest proto.InternalMessageInfo

func (m *ListenRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.Protocol", Protocol_name, Protocol_value)
	proto.RegisterEnum("pb.Type", Type_name, Type_value)
	proto.RegisterEnum("pb.Security", Security_name, Security_value)
	proto.RegisterEnum("pb.Status", Status_name, Status_value)
	proto.RegisterEnum("pb.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("pb.ActionOnRegisterExistingService", ActionOnRegisterExistingService_name, ActionOnRegisterExistingService_value)
	proto.RegisterType((*State)(nil), "pb.State")
	proto.RegisterMapType((map[string]string)(nil), "pb.State.MetadataEntry")
	proto.RegisterType((*ConnectionInfo)(nil), "pb.ConnectionInfo")
	proto.RegisterType((*Node)(nil), "pb.Node")
	proto.RegisterMapType((map[string]string)(nil), "pb.Node.MetaEntry")
	proto.RegisterType((*Info)(nil), "pb.Info")
	proto.RegisterMapType((map[string]string)(nil), "pb.Info.MetaEntry")
	proto.RegisterType((*Event)(nil), "pb.Event")
	proto.RegisterType((*RegisterRequest)(nil), "pb.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "pb.RegisterResponse")
	proto.RegisterType((*DeregisterRequest)(nil), "pb.DeregisterRequest")
	proto.RegisterType((*DeregisterResponse)(nil), "pb.DeregisterResponse")
	proto.RegisterType((*ListRequest)(nil), "pb.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "pb.ListResponse")
	proto.RegisterType((*GetRequest)(nil), "pb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "pb.GetResponse")
	proto.RegisterType((*SearchRequest)(nil), "pb.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "pb.SearchResponse")
	proto.RegisterType((*ListenRequest)(nil), "pb.ListenRequest")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 1102 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4d, 0x6f, 0xdb, 0x46,
	0x13, 0x36, 0x29, 0xea, 0x6b, 0xf4, 0xb5, 0x9e, 0xd7, 0x49, 0x04, 0xc1, 0x78, 0xe3, 0x30, 0x45,
	0xa1, 0x2a, 0x89, 0x5d, 0x38, 0xe8, 0x07, 0x92, 0x1e, 0x6a, 0xc4, 0xae, 0x93, 0x34, 0xb1, 0x0b,
	0xca, 0xbd, 0x15, 0x08, 0xd6, 0xe4, 0x5a, 0x21, 0x4c, 0x2f, 0x59, 0x72, 0xe5, 0x56, 0x2d, 0x7a,
	0xe9, 0xbd, 0xa7, 0x9e, 0xfb, 0x83, 0x7a, 0xee, 0x5f, 0xe8, 0xb5, 0xbf, 0xa0, 0x97, 0x62, 0x96,
	0x4b, 0x8a, 0x72, 0x02, 0xc4, 0x05, 0x7a, 0xd2, 0xee, 0x33, 0x33, 0xcf, 0x3e, 0x33, 0xbb, 0x33,
	0x14, 0xf4, 0x32, 0x91, 0x5e, 0x86, 0xbe, 0xd8, 0x4e, 0xd2, 0x58, 0xc5, 0x68, 0x27, 0xa7, 0xa3,
	0xcd, 0x59, 0x1c, 0xcf, 0x22, 0xb1, 0xc3, 0x93, 0x70, 0x87, 0x4b, 0x19, 0x2b, 0xae, 0xc2, 0x58,
	0x66, 0xb9, 0x87, 0xfb, 0x9b, 0x05, 0xf5, 0xa9, 0xe2, 0x4a, 0xa0, 0x0b, 0x8d, 0x4c, 0x71, 0x35,
	0xcf, 0x86, 0xd6, 0x96, 0x35, 0xee, 0xef, 0xc2, 0x76, 0x72, 0xba, 0x3d, 0xd5, 0x88, 0x67, 0x2c,
	0xf8, 0x10, 0x5a, 0x17, 0x42, 0xf1, 0x80, 0x2b, 0x3e, 0xb4, 0xb7, 0x6a, 0xe3, 0xce, 0xee, 0xad,
	0xc2, 0x4b, 0x6c, 0xbf, 0x34, 0x96, 0x03, 0xa9, 0xd2, 0x85, 0x57, 0x3a, 0x8e, 0x1e, 0x43, 0x6f,
	0xc5, 0x84, 0x0c, 0x6a, 0xe7, 0x62, 0xa1, 0x8f, 0x69, 0x7b, 0xb4, 0xc4, 0x0d, 0xa8, 0x5f, 0xf2,
	0x68, 0x2e, 0x86, 0xb6, 0xc6, 0xf2, 0xcd, 0x23, 0xfb, 0x53, 0xcb, 0xbd, 0x84, 0xfe, 0x93, 0x58,
	0x4a, 0xe1, 0x93, 0xe8, 0x67, 0xf2, 0x2c, 0xc6, 0x31, 0xb4, 0xb4, 0x74, 0x3f, 0x8e, 0x8c, 0xd2,
	0x2e, 0x69, 0xf8, 0xca, 0x60, 0x5e, 0x69, 0xc5, 0x21, 0x34, 0x79, 0x10, 0xa4, 0x22, 0xcb, 0x0c,
	0x6f, 0xb1, 0xc5, 0x2d, 0xe8, 0x3c, 0x11, 0xa9, 0x0a, 0xcf, 0x42, 0x9f, 0x2b, 0x31, 0xac, 0x6d,
	0x59, 0xe3, 0xae, 0x57, 0x85, 0xdc, 0xbf, 0x2d, 0x70, 0x8e, 0xe2, 0x40, 0x20, 0x82, 0x73, 0xc4,
	0x2f, 0x84, 0x51, 0xab, 0xd7, 0x2b, 0x12, 0xec, 0xeb, 0x4a, 0xa8, 0xad, 0x4a, 0x18, 0x43, 0x2b,
	0x13, 0xfe, 0x3c, 0x0d, 0xd5, 0x62, 0xe8, 0x2c, 0x39, 0xa6, 0x06, 0xf3, 0x4a, 0x2b, 0x95, 0x4b,
	0xa9, 0x68, 0x58, 0xdf, 0xb2, 0xc6, 0x35, 0x8f, 0x96, 0xf8, 0x3e, 0x38, 0x54, 0xdd, 0x61, 0x43,
	0x5f, 0x01, 0x52, 0x1c, 0x69, 0xd5, 0x37, 0x90, 0x57, 0x5f, 0xdb, 0x47, 0x9f, 0x40, 0xbb, 0x84,
	0xfe, 0x55, 0xd5, 0xff, 0xb2, 0xc0, 0xd1, 0xc5, 0x46, 0x70, 0x64, 0x25, 0x7b, 0x5a, 0xe3, 0x26,
	0xb4, 0xe9, 0x37, 0x4b, 0xb8, 0x5f, 0x84, 0x2e, 0x01, 0xdc, 0x04, 0x47, 0x2d, 0x92, 0xbc, 0xa6,
	0xfd, 0xdd, 0x16, 0x69, 0x3b, 0x59, 0x24, 0xc2, 0xd3, 0x28, 0x1d, 0x19, 0xf1, 0x53, 0x11, 0xe9,
	0x94, 0xdb, 0x5e, 0xbe, 0xc1, 0xff, 0x43, 0x5d, 0xc6, 0x81, 0xc8, 0x86, 0x75, 0x9d, 0x50, 0xab,
	0x48, 0xc8, 0xcb, 0xe1, 0x32, 0xdf, 0xe6, 0x32, 0x5f, 0x52, 0xf7, 0xdf, 0xe5, 0xfb, 0x0d, 0xd4,
	0x0f, 0x2e, 0x85, 0x54, 0x78, 0xc7, 0xa8, 0xcf, 0x1f, 0x56, 0x8f, 0x4e, 0xd2, 0x86, 0x4a, 0x0a,
	0x45, 0x49, 0xec, 0x95, 0x92, 0x38, 0xa1, 0x3c, 0x8b, 0x75, 0xd2, 0x46, 0x3f, 0x09, 0xf4, 0x34,
	0xea, 0xa6, 0x30, 0xf0, 0xc4, 0x2c, 0xcc, 0x94, 0x48, 0x3d, 0xf1, 0xed, 0x5c, 0x64, 0x0a, 0x5d,
	0x68, 0x9a, 0x4e, 0xd5, 0x47, 0x55, 0x63, 0x0a, 0x03, 0x3e, 0x86, 0x06, 0xd7, 0xcf, 0xde, 0xbc,
	0xb1, 0xbb, 0xe4, 0xb2, 0xa7, 0x91, 0x63, 0x59, 0x10, 0x1e, 0x7c, 0x1f, 0x66, 0x2a, 0x94, 0xb3,
	0x69, 0x1e, 0xe4, 0x99, 0x10, 0xf7, 0x21, 0xb0, 0xe5, 0x99, 0x59, 0x12, 0xcb, 0x4c, 0xe0, 0x6d,
	0xe8, 0xa4, 0x1a, 0x4b, 0x17, 0xaf, 0xc2, 0xc0, 0x54, 0x06, 0x0a, 0xe8, 0x59, 0xe0, 0x3e, 0x87,
	0xf5, 0x7d, 0x91, 0x5e, 0x91, 0xfa, 0xae, 0x28, 0x2a, 0x6b, 0x7e, 0x7b, 0x34, 0x11, 0xda, 0xe6,
	0xce, 0xdc, 0x0d, 0xc0, 0x2a, 0x57, 0x2e, 0xc1, 0xbd, 0x07, 0x9d, 0x17, 0x61, 0xa6, 0x0a, 0xee,
	0x95, 0xa7, 0x64, 0x5d, 0x79, 0x4a, 0xee, 0x67, 0xd0, 0xcd, 0x9d, 0x8d, 0xfe, 0xfb, 0xd0, 0xe5,
	0x49, 0x12, 0x51, 0x83, 0xd2, 0x04, 0x1b, 0x5a, 0xcb, 0xd7, 0xa2, 0x2b, 0xb7, 0x62, 0x75, 0x1f,
	0x00, 0x1c, 0x0a, 0x75, 0xdd, 0x2c, 0x48, 0x99, 0x76, 0x37, 0x67, 0x15, 0x37, 0x6a, 0xbd, 0xf5,
	0x46, 0xbf, 0x84, 0xde, 0x54, 0xf0, 0xd4, 0x7f, 0x7d, 0xad, 0x44, 0xca, 0x9e, 0xb0, 0xdf, 0xd6,
	0x13, 0xee, 0xc7, 0xd0, 0x2f, 0xc8, 0xcc, 0xe1, 0xef, 0xd1, 0x6c, 0xd0, 0xf7, 0xf9, 0x66, 0x92,
	0xa5, 0xc5, 0x7d, 0x00, 0x3d, 0x2a, 0x8f, 0x90, 0xd7, 0x12, 0x31, 0xb9, 0x07, 0xad, 0x62, 0x40,
	0x61, 0x07, 0x9a, 0x5f, 0xcb, 0x73, 0x19, 0x7f, 0x27, 0xd9, 0x1a, 0xb6, 0xc0, 0x39, 0x4c, 0x13,
	0x9f, 0x59, 0xb4, 0x7a, 0xaa, 0x54, 0xc2, 0xec, 0xc9, 0x2f, 0x16, 0x38, 0x24, 0x11, 0x07, 0xd0,
	0x31, 0x9e, 0xb4, 0x65, 0x6b, 0xd8, 0x00, 0xfb, 0xc9, 0x5e, 0xee, 0xbb, 0x37, 0x57, 0xaf, 0x99,
	0x8d, 0x0c, 0xba, 0xc7, 0xe9, 0x8c, 0xcb, 0xf0, 0x07, 0x5d, 0x79, 0x56, 0xc3, 0x3e, 0xc0, 0x49,
	0x7c, 0x2e, 0xe4, 0x54, 0xc5, 0xa9, 0x60, 0x0e, 0xf9, 0xee, 0x73, 0xc5, 0x59, 0x9d, 0xe8, 0xbe,
	0x08, 0x23, 0x41, 0x06, 0x3e, 0x13, 0xac, 0x81, 0x5d, 0x68, 0xed, 0x25, 0x49, 0xee, 0xd8, 0xd4,
	0x3b, 0xdf, 0x8f, 0xe7, 0x52, 0x65, 0xac, 0x85, 0x6d, 0xa8, 0x93, 0x73, 0xc6, 0xda, 0x93, 0xfb,
	0xd0, 0x2a, 0x26, 0x23, 0xb1, 0x1d, 0xc5, 0x92, 0xb4, 0x34, 0xa1, 0x76, 0xf2, 0x62, 0xca, 0x2c,
	0xec, 0x41, 0xfb, 0xe5, 0x5c, 0xcd, 0x79, 0x44, 0x5b, 0x7b, 0xf2, 0x11, 0x34, 0xf2, 0x0f, 0x17,
	0xae, 0x43, 0xcf, 0xc8, 0xcf, 0x01, 0xb6, 0x46, 0xb9, 0x7b, 0x73, 0x29, 0x43, 0x39, 0x63, 0x16,
	0x6d, 0xa6, 0x2a, 0x4e, 0x12, 0x11, 0x30, 0x7b, 0x72, 0x0a, 0xed, 0xb2, 0xd9, 0x29, 0x2b, 0x13,
	0xa9, 0x31, 0xb6, 0x46, 0x59, 0x15, 0x2d, 0x25, 0x02, 0x66, 0x91, 0xc7, 0xbe, 0xa8, 0x20, 0x36,
	0x6e, 0x00, 0xab, 0x22, 0x34, 0xc2, 0x58, 0x4d, 0x17, 0x3b, 0x09, 0xb8, 0x12, 0x01, 0x73, 0x26,
	0xaf, 0xe0, 0xf6, 0x3b, 0x5a, 0x58, 0x0b, 0x14, 0x49, 0xc4, 0x7d, 0x4a, 0x11, 0xa1, 0x9f, 0x07,
	0x17, 0x5e, 0xcc, 0xd2, 0x55, 0x0a, 0x34, 0x7b, 0xc6, 0x6c, 0xca, 0xdd, 0x13, 0x17, 0xf1, 0xa5,
	0x38, 0x8e, 0x02, 0xe6, 0xec, 0xfe, 0x5e, 0x83, 0x96, 0x67, 0x9e, 0x35, 0x4e, 0x8b, 0xb5, 0x48,
	0xf1, 0x7f, 0xf4, 0x84, 0xae, 0xcc, 0xa1, 0xd1, 0xc6, 0x2a, 0x68, 0xba, 0x74, 0xf3, 0xe7, 0x3f,
	0xfe, 0xfc, 0xd5, 0xbe, 0xe9, 0xae, 0xef, 0x98, 0xc7, 0xb6, 0x53, 0x34, 0xf2, 0x23, 0x6b, 0x82,
	0x67, 0x00, 0xcb, 0xce, 0xc6, 0x1b, 0xc4, 0xf0, 0xc6, 0xd4, 0x18, 0xdd, 0xbc, 0x0a, 0x1b, 0xea,
	0x0f, 0x34, 0xf5, 0x5d, 0xbc, 0x53, 0x52, 0x07, 0xa5, 0xd3, 0xce, 0x8f, 0x95, 0x16, 0xfd, 0x09,
	0x3f, 0x07, 0x87, 0xde, 0x37, 0x0e, 0x88, 0xaa, 0x32, 0x35, 0x46, 0x6c, 0x09, 0x18, 0xd6, 0x1b,
	0x9a, 0x75, 0x80, 0xbd, 0x92, 0x35, 0xa2, 0xc8, 0xe7, 0x50, 0x3b, 0x14, 0x0a, 0xfb, 0xe4, 0xbf,
	0x9c, 0x05, 0xa3, 0x41, 0xb9, 0x37, 0xe1, 0xae, 0x0e, 0xdf, 0xc4, 0x51, 0x19, 0x3e, 0x13, 0xea,
	0x8a, 0x9a, 0xa7, 0xd0, 0xc8, 0xbb, 0x14, 0xd7, 0xf3, 0xef, 0x74, 0xa5, 0xfd, 0x47, 0x58, 0x85,
	0x0c, 0xe9, 0x2d, 0x4d, 0xba, 0x8e, 0x83, 0x92, 0x34, 0xcb, 0xe3, 0xc7, 0xd0, 0xc8, 0xfb, 0x36,
	0x67, 0x5a, 0xe9, 0xe1, 0x51, 0xbb, 0xfc, 0xe4, 0x7c, 0x68, 0x9d, 0x36, 0xf4, 0xff, 0x88, 0x87,
	0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xb1, 0xba, 0x8e, 0xa0, 0xd6, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RegistryClient is the client API for Registry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistryClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	Deregister(ctx context.Context, in *DeregisterRequest, opts ...grpc.CallOption) (*DeregisterResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (Registry_ListenClient, error)
}

type registryClient struct {
	cc grpc.ClientConnInterface
}

func NewRegistryClient(cc grpc.ClientConnInterface) RegistryClient {
	return &registryClient{cc}
}

func (c *registryClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/pb.Registry/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryClient) Deregister(ctx context.Context, in *DeregisterRequest, opts ...grpc.CallOption) (*DeregisterResponse, error) {
	out := new(DeregisterResponse)
	err := c.cc.Invoke(ctx, "/pb.Registry/Deregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/pb.Registry/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/pb.Registry/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/pb.Registry/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryClient) Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (Registry_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Registry_serviceDesc.Streams[0], "/pb.Registry/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &registryListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Registry_ListenClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type registryListenClient struct {
	grpc.ClientStream
}

func (x *registryListenClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RegistryServer is the server API for Registry service.
type RegistryServer interface {
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	Deregister(context.Context, *DeregisterRequest) (*DeregisterResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Listen(*ListenRequest, Registry_ListenServer) error
}

// UnimplementedRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedRegistryServer struct {
}

func (*UnimplementedRegistryServer) Register(ctx context.Context, req *RegisterRequest) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedRegistryServer) Deregister(ctx context.Context, req *DeregisterRequest) (*DeregisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deregister not implemented")
}
func (*UnimplementedRegistryServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedRegistryServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRegistryServer) Search(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedRegistryServer) Listen(req *ListenRequest, srv Registry_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}

func RegisterRegistryServer(s *grpc.Server, srv RegistryServer) {
	s.RegisterService(&_Registry_serviceDesc, srv)
}

func _Registry_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Registry/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registry_Deregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeregisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServer).Deregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Registry/Deregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServer).Deregister(ctx, req.(*DeregisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registry_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Registry/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registry_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Registry/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registry_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Registry/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registry_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RegistryServer).Listen(m, &registryListenServer{stream})
}

type Registry_ListenServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type registryListenServer struct {
	grpc.ServerStream
}

func (x *registryListenServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Registry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Registry",
	HandlerType: (*RegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Registry_Register_Handler,
		},
		{
			MethodName: "Deregister",
			Handler:    _Registry_Deregister_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Registry_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Registry_Get_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Registry_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _Registry_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "service.proto",
}
